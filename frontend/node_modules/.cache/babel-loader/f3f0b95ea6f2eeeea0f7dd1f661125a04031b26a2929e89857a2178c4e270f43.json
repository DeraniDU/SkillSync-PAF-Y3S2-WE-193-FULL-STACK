{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deranindu\\\\Music\\\\auth-frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport UserService from \"../services/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    UserService.getPublicContent().then(response => {\n      setContent(response.data);\n    }, error => {\n      // Fix: Handle the error object properly\n      let errorMessage;\n      if (error.response && error.response.data) {\n        if (typeof error.response.data === 'object') {\n          // Convert object to a string representation\n          errorMessage = JSON.stringify(error.response.data);\n        } else {\n          errorMessage = String(error.response.data);\n        }\n      } else {\n        errorMessage = error.message || \"Unknown error occurred\";\n      }\n      setContent(errorMessage);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to our authentication demo application!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This page is publicly accessible to everyone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login or register to access protected content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"sr04CA2tf335xnQdpVaJvTVIPd4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","UserService","jsxDEV","_jsxDEV","Home","_s","content","setContent","getPublicContent","then","response","data","error","errorMessage","JSON","stringify","String","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Deranindu/Music/auth-frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst Home = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        // Fix: Handle the error object properly\r\n        let errorMessage;\r\n        if (error.response && error.response.data) {\r\n          if (typeof error.response.data === 'object') {\r\n            // Convert object to a string representation\r\n            errorMessage = JSON.stringify(error.response.data);\r\n          } else {\r\n            errorMessage = String(error.response.data);\r\n          }\r\n        } else {\r\n          errorMessage = error.message || \"Unknown error occurred\";\r\n        }\r\n        \r\n        setContent(errorMessage);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n        <div className=\"mt-4\">\r\n          <p>Welcome to our authentication demo application!</p>\r\n          <p>This page is publicly accessible to everyone.</p>\r\n          <p>Login or register to access protected content.</p>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdC,WAAW,CAACO,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAChCC,QAAQ,IAAK;MACZH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,EACAC,KAAK,IAAK;MACT;MACA,IAAIC,YAAY;MAChB,IAAID,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACC,IAAI,EAAE;QACzC,IAAI,OAAOC,KAAK,CAACF,QAAQ,CAACC,IAAI,KAAK,QAAQ,EAAE;UAC3C;UACAE,YAAY,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAACF,QAAQ,CAACC,IAAI,CAAC;QACpD,CAAC,MAAM;UACLE,YAAY,GAAGG,MAAM,CAACJ,KAAK,CAACF,QAAQ,CAACC,IAAI,CAAC;QAC5C;MACF,CAAC,MAAM;QACLE,YAAY,GAAGD,KAAK,CAACK,OAAO,IAAI,wBAAwB;MAC1D;MAEAV,UAAU,CAACM,YAAY,CAAC;IAC1B,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBhB,OAAA;MAAQe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC3BhB,OAAA;QAAAgB,QAAA,EAAKb;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClBpB,OAAA;QAAKe,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBhB,OAAA;UAAAgB,QAAA,EAAG;QAA+C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtDpB,OAAA;UAAAgB,QAAA,EAAG;QAA6C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpDpB,OAAA;UAAAgB,QAAA,EAAG;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCID,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}