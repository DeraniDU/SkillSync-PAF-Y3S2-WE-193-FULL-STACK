{"ast":null,"code":"export default function authHeader() {\n  const userStr = localStorage.getItem(\"user\");\n  let user = null;\n  if (userStr) {\n    try {\n      user = JSON.parse(userStr);\n    } catch (e) {\n      console.error(\"Error parsing user from localStorage:\", e);\n      return {};\n    }\n  }\n  if (user && user.accessToken) {\n    console.log(\"Adding auth header with token:\", user.accessToken.substring(0, 20) + \"...\");\n    return {\n      Authorization: \"Bearer \" + user.accessToken\n    };\n  } else {\n    console.log(\"No token found in localStorage\");\n    return {};\n  }\n}","map":{"version":3,"names":["authHeader","userStr","localStorage","getItem","user","JSON","parse","e","console","error","accessToken","log","substring","Authorization"],"sources":["C:/Users/Deranindu/Desktop/project be/SkillSync-PAF-Y3S2-WE-193-BE/frontend/src/services/auth-header.js"],"sourcesContent":["export default function authHeader() {\r\n  const userStr = localStorage.getItem(\"user\");\r\n  let user = null;\r\n  \r\n  if (userStr) {\r\n    try {\r\n      user = JSON.parse(userStr);\r\n    } catch(e) {\r\n      console.error(\"Error parsing user from localStorage:\", e);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  if (user && user.accessToken) {\r\n    console.log(\"Adding auth header with token:\", user.accessToken.substring(0, 20) + \"...\");\r\n    return { Authorization: \"Bearer \" + user.accessToken };\r\n  } else {\r\n    console.log(\"No token found in localStorage\");\r\n    return {};\r\n  }\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,UAAUA,CAAA,EAAG;EACnC,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC5C,IAAIC,IAAI,GAAG,IAAI;EAEf,IAAIH,OAAO,EAAE;IACX,IAAI;MACFG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;IAC5B,CAAC,CAAC,OAAMM,CAAC,EAAE;MACTC,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEF,CAAC,CAAC;MACzD,OAAO,CAAC,CAAC;IACX;EACF;EAEA,IAAIH,IAAI,IAAIA,IAAI,CAACM,WAAW,EAAE;IAC5BF,OAAO,CAACG,GAAG,CAAC,gCAAgC,EAAEP,IAAI,CAACM,WAAW,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;IACxF,OAAO;MAAEC,aAAa,EAAE,SAAS,GAAGT,IAAI,CAACM;IAAY,CAAC;EACxD,CAAC,MAAM;IACLF,OAAO,CAACG,GAAG,CAAC,gCAAgC,CAAC;IAC7C,OAAO,CAAC,CAAC;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}