{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = process.env.REACT_APP_API_URL;\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"/auth/signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        console.log(\"Token stored:\", response.data.accessToken.substring(0, 20) + \"...\");\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  register(username, email, password) {\n    return axios.post(API_URL + \"/auth/signup\", {\n      username,\n      email,\n      password\n    });\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  // Handle the token received from Google OAuth\n  handleGoogleLoginSuccess(token) {\n    localStorage.setItem(\"user\", JSON.stringify({\n      accessToken: token,\n      tokenType: \"Bearer\"\n    }));\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","console","log","substring","logout","removeItem","register","email","getCurrentUser","parse","getItem","handleGoogleLoginSuccess","token","tokenType"],"sources":["C:/Users/Deranindu/Music/auth-frontend/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n  return axios\r\n    .post(API_URL + \"/auth/signin\", { username, password })\r\n    .then(response => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(\"Token stored:\", response.data.accessToken.substring(0, 20) + \"...\");\r\n      }\r\n      return response.data;\r\n    });\r\n}\r\n\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"/auth/signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n\r\n  // Handle the token received from Google OAuth\r\n  handleGoogleLoginSuccess(token) {\r\n    localStorage.setItem(\"user\", JSON.stringify({\r\n      accessToken: token,\r\n      tokenType: \"Bearer\"\r\n    }));\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC1B,OAAOR,KAAK,CACTS,IAAI,CAACR,OAAO,GAAG,cAAc,EAAE;MAAEM,QAAQ;MAAEC;IAAS,CAAC,CAAC,CACtDE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;QAC3DM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;MAClF;MACA,OAAOT,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAGES,MAAMA,CAAA,EAAG;IACPP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQA,CAAChB,QAAQ,EAAEiB,KAAK,EAAEhB,QAAQ,EAAE;IAClC,OAAOR,KAAK,CAACS,IAAI,CAACR,OAAO,GAAG,cAAc,EAAE;MAC1CM,QAAQ;MACRiB,KAAK;MACLhB;IACF,CAAC,CAAC;EACJ;EAEAiB,cAAcA,CAAA,EAAG;IACf,OAAOT,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;;EAEA;EACAC,wBAAwBA,CAACC,KAAK,EAAE;IAC9Bf,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;MAC1CJ,WAAW,EAAEgB,KAAK;MAClBC,SAAS,EAAE;IACb,CAAC,CAAC,CAAC;EACL;AACF;AAEA,eAAe,IAAIzB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}